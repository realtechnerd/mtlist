[{"/home/realtechnerd/Projects/mtlist/src/App.js":"1","/home/realtechnerd/Projects/mtlist/src/components/Card.js":"2","/home/realtechnerd/Projects/mtlist/src/index.js":"3","/home/realtechnerd/Projects/mtlist/src/components/Header.js":"4","/home/realtechnerd/Projects/mtlist/src/views/MainContent.js":"5"},{"size":221,"mtime":1610571206423,"results":"6","hashOfConfig":"7"},{"size":3017,"mtime":1610636029200,"results":"8","hashOfConfig":"7"},{"size":265,"mtime":1610571218191,"results":"9","hashOfConfig":"7"},{"size":271,"mtime":1610571342468,"results":"10","hashOfConfig":"7"},{"size":1721,"mtime":1610582556535,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"wykzfp",{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/home/realtechnerd/Projects/mtlist/src/App.js",[],["26","27"],"/home/realtechnerd/Projects/mtlist/src/components/Card.js",["28","29","30","31"],"import React, {useState, useEffect} from 'react'\nimport { Col, Modal, Row } from 'react-bootstrap';\nimport \"../css/Card.css\";\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\nimport Tippy from \"@tippyjs/react\";\nimport \"tippy.js/dist/tippy.css\";\nimport Pvp from \"../imgs/pvp2.png\";\nimport Creative from \"../imgs/minetest.svg.png\"\n\nexport default function Card(props) {\n    const [show, setShow] = useState(false);\n    const handleClose = () => {\n        setShow(false)\n    }\n    const handleOpen = () => {\n        setShow(true)\n    }\n\n    const mapUsers = props.each_client.map(data => (\n        <Col lg=\"6\" md=\"6\">\n            <h5 className=\"text-center\">{data}</h5>\n        </Col>\n    ))\n\n    return (\n        <>\n        <Col lg=\"6\" md=\"6\" key={'Card'}>\n            <div className=\"card border-0 custom-shadow\">\n                <div className=\"card-body\">\n                  <p className=\"mb-1\">{props.address}</p>\n                    <h4>{props.name}</h4>\n                    <ReactReadMoreReadLess\n                        charLimit={100}\n                        readMoreText={\"Read more ▼\"}\n                        readLessText={\"Read less ▲\"}\n                    >\n                       {props.description}\n                    </ReactReadMoreReadLess>\n                    <br/>\n                    <div className=\"overflow-hidden mb-2\">\n                        <button className=\"md:float-left\" {...(props.clients && { onClick: handleOpen })} style={{cursor: !props.clients && \"text\", userSelect: !props.clients && \"text\"}}><h5 className=\"mb-0 mt-2 text-black\"><b>Online Clients:</b> {props.clients}</h5></button>\n                        <h5 className=\"mb-0 mt-2.5 text-black md:float-right\"><b>Max Clients:</b> {props.max_clients}</h5>\n                    </div>\n                    <a href={props.url} target=\"_blank\" className=\"mb-0 text-black\" style={{display: !props.url && \"none\"}}><h6><span>{props.url}</span></h6></a>  \n                    <div className=\"flex overflow-hidden\">\n                        <Tippy content={<p style={{fontFamily: \"Inter\"}} className=\"mb-0\">PVP Enabled</p>}>\n                            <img src={Pvp} style={{height: \"28px\", display: !props.pvp && \"none\"}} className=\"mr-1.5\"/>\n                        </Tippy>   \n                        <Tippy content={<p style={{fontFamily: \"Inter\"}} className=\"mb-0\">Creative Mode On</p>}>\n                            <img src={Creative} style={{height: \"28px\", display: !props.creative && \"none\"}}/>\n                        </Tippy>    \n                    </div>\n                </div>\n            </div>\n        </Col>\n            <Modal show={show} onHide={handleClose} className=\"modal90\">\n\n                <Modal.Header closeButton>\n                    <Modal.Title>Users Online:</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Row>\n                        {mapUsers}\n                    </Row>\n                </Modal.Body>\n\n            </Modal>\n        </>\n    )\n}","/home/realtechnerd/Projects/mtlist/src/index.js",[],["32","33"],"/home/realtechnerd/Projects/mtlist/src/components/Header.js",[],"/home/realtechnerd/Projects/mtlist/src/views/MainContent.js",["34"],"import React, {useEffect, useState} from 'react'\nimport { Row, Col } from 'react-bootstrap';\nimport \"../css/MainContent.css\";\nimport Card from '../components/Card';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function MainContent() {\n    const [data, setData] = useState();\n    const [loading, setLoading] = useState(true);\n\n\n    useEffect(() => {\n        fetchData()\n    }, []);\n\n    const fetchData = async () => {\n        await fetch(\"https://servers.minetest.net/list\")\n            .then(res => res.json())\n            .then(data => {\n                setData(data);\n                setLoading(false)\n                console.log(data)\n            })\n    }\n    const map = data && data['list'].map((data) => <Card key={uuidv4()} name={data.name} description={data.description} address={data.address} clients={data.clients} max_clients={data.clients_max} url={data.url} each_client={data.clients_list} pvp={data.pvp} creative={data.creative}/>)\n    return (\n        <>\n        <div className=\"container\">\n        <div className=\"ServInfo overflow-hidden md:overflow-scroll text-center\">\n            <p className=\"md:float-left\">\n                Online Clients: <b>{data && data['total'].clients}</b> | \n                Online Servers: <b>{data && data['total'].servers}</b>\n            </p>\n            <p className=\"md:float-right\">\n                Total Clients: <b>{data && data['total_max'].clients}</b> | \n                Total Servers: <b>{data && data['total_max'].servers}</b>\n            </p>\n        </div>\n        {loading ? <h1 style={{fontFamily: \"Inter\"}} className=\"text-center\">Loading..</h1> : null}\n            <Row>\n               {map} \n            </Row>\n        </div>\n        </>\n    )\n}\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":26,"nodeType":"41","messageId":"42","endLine":1,"endColumn":35},{"ruleId":"43","severity":1,"message":"44","line":44,"column":41,"nodeType":"45","endLine":44,"endColumn":56},{"ruleId":"46","severity":1,"message":"47","line":47,"column":29,"nodeType":"48","endLine":47,"endColumn":120},{"ruleId":"46","severity":1,"message":"47","line":50,"column":29,"nodeType":"48","endLine":50,"endColumn":111},{"ruleId":"35","replacedBy":"49"},{"ruleId":"37","replacedBy":"50"},{"ruleId":"39","severity":1,"message":"51","line":2,"column":15,"nodeType":"41","messageId":"42","endLine":2,"endColumn":18},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["52"],["53"],"'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]